# Generated by Django 3.0.1 on 2019-12-24 02:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=True)),
            ],
            options={
                'permissions': (('app01_table_list', '可以查看kingadmin中的所有数据'), ('app01_table_list_view', '可以查看kingadmin中每条数据的修改页'), ('app01_table_list_change', '可以查看kingadmin中每条数据进行修改'), ('app01_table_list_add_view', '可以查看kingadmin中每张表增加页'), ('app01_table_list_add', '可以查看kingadmin中的进行数据增加')),
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FileStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_addre', models.CharField(default='app01/file/', max_length=64, verbose_name='文件储存地址')),
                ('file_time', models.CharField(max_length=32, verbose_name='文件日期')),
                ('file_format', models.SmallIntegerField(choices=[(0, 'xls'), (1, 'csv'), (2, 'json'), (3, 'txt')], default=0, verbose_name='文件格式')),
                ('file_data_summary', models.BooleanField(default=False, verbose_name='数据汇总')),
            ],
        ),
        migrations.CreateModel(
            name='Menus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='菜单')),
                ('url_type', models.SmallIntegerField(choices=[(0, 'absolute'), (1, 'dynamic')], default=0)),
                ('url_name', models.CharField(max_length=32, verbose_name='url')),
            ],
            options={
                'unique_together': {('name', 'url_name')},
            },
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.SmallIntegerField(verbose_name='费用标准')),
                ('morning', models.CharField(max_length=32, verbose_name='上午上班')),
                ('noon', models.CharField(max_length=32, verbose_name='上午下班')),
                ('afternoon', models.CharField(max_length=32, verbose_name='下午上班')),
                ('night', models.CharField(max_length=32, verbose_name='下午下班')),
                ('go_to_work_time_error', models.CharField(max_length=32, verbose_name='上班时间误差')),
                ('go_off_work_time_error', models.CharField(max_length=32, verbose_name='下班时间误差')),
            ],
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=64)),
                ('lack_detail', models.CharField(max_length=246, verbose_name='缺少详细说明')),
                ('lack_count', models.CharField(max_length=32, verbose_name='缺少次数')),
                ('fine', models.CharField(blank=True, max_length=64, null=True, verbose_name='罚金')),
                ('file_stores_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.FileStore')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('menus', models.ManyToManyField(blank=True, to='app01.Menus')),
            ],
        ),
        migrations.CreateModel(
            name='Detailed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=64)),
                ('data', models.CharField(max_length=32, verbose_name='数据日期')),
                ('detail', models.CharField(max_length=64, verbose_name='详细')),
                ('file_stores_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.FileStore')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=64, verbose_name='部门')),
                ('head', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='负责人')),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='department_groups',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app01.DepartmentGroup'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app01.Role'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
